.TH "CLR\-BOOT\-MANAGER" "1" "" "clr\-boot\-manager 1" "clr\-boot\-manager"

.SH "NAME"
clr\-boot\-manager \- Boot Loader Management

.SH "SYNOPSIS"
.HP \w'\clr\-boot\-manager\fR\ 'u
\fBclr\-boot\-manager\fR [OPTIONS...]

.SH "DESCRIPTION"
.PP
\fBclr\-boot\-manager\fR
exists to enable the correct maintainence of vendor kernels
and appropriate garbage collection tactics over the course of upgrades.
The implementation provides the means to enable correct cohabitation on
a shared boot directory, such as the EFI System Partition for UEFI-booting
operating systems.

Special care is taken to ensure the ESP is handled gracefully, and in the
instance that it is not already mounted, then \fBclr\-boot\-manager\fR will
automatically discover and mount it, and automatically unmount the ESP again
when it is complete.

.SH "OPTIONS"
.PP
The following options are understood:
.PP
\fB\-h\fR, \fB\-\-help\fR, \fBhelp\fR
.RS 4
Prints a help message\&.
.RE
.PP
\fB\-p\fR, \fB\-\-path\fR
.RS 4
Set the base path for boot management operations\&.
.RE
.PP
\fB\-i\fR, \fB\-\-image\fR
.RS 4
Force \fBclr\-boot\-manager\fR to run in image mode\&.
.RE
.PP
\fB\-n\fR, \fB\-\-no-efi-update\fR
.RS 4
Force \fBclr\-boot\-manager\fR to skip efi variables update (when using shim-systemd
backend)\&.
.RE
.PP

.PP
\fB\-v\fR, \fB\-\-version\fR, \fBversion\fR
.RS 4
Print the version of \fBclr\-boot\-manager\fR  and exit\&.
.RE

.SH "COMMANDS"
.PP
The following commands are understood:

.PP
\fBreport-booted\fR
.RS 4
Report the current kernel as successfully booted. Ideally this should be
invoked from the accompanying systemd unit upon boot, in order for
\fBclr\-boot\-manager\fR to track known-booting kernels\&.
.RE

.PP
\fBupdate\fR
.RS 4
Perform an update operation on the configured boot directory. This will
analyze kernels available from the software distribution that are currently
installed, and pick the ideal candidates for installation.

This includes the current vendor selection for each kernel type,
the currently running kernel, and the most recent successfully booted kernel
of each type currently installed.

All other kernels not fitting these parameters are
then removed in accordance with vendor policy, and removed from the boot
directory. For UEFI systems this is the EFI System Partition.\&.
.RE

.PP
\fBset\-timeout\fR [TIMEOUT IN SECONDS]
.RS 4
Configure the timeout that will be used when next writing the boot loader
configuration, i.e. when \fBclr\-boot\-manager update\fR is called.
Setting this to a value of 0 will remove the timout entirely\&.
.RE

.PP
\fBget\-timeout\fR
.RS 4
Returns the currently configured timeout as set by \fBclr\-boot\-manager set\-timeout\fR\&.
.RE

.PP
\fBlist-kernels\fR
.RS 4
Display kernels currently available for booting that were provisioned by clr-boot-manager.

This command will present a sorted list of kernels with the kernel that is selected for
the next boot highlighted with a * prefix\&.
.RE

.PP
\fBset-kernel\fR
.RS 4
Configure the default booting kernel.

This command will not prevent the update command from changing the default kernel\&.
.RE

.PP
\fBremove-kernel\fR
.RS 4
Remove a kernel from the system (both /boot and /usr locations).

Warning: This can remove the only kernel from the system, ensure you have a default kernel
set after running this command\&.
.RE

.SH "EXIT STATUS"
.PP
On success, 0 is returned, a non\-zero failure code otherwise\&

.SH "CONFIGURATION"
.PP
clr-boot-manager takes into account the following paths to modify its behavior:

.PP
\fB@KERNEL_CONF_DIRECTORY@/cmdline.d/*.conf\fR
.RS 4
A set of files that will be used to modify the kernel commandline. The files can
also be used to mask the vendor cmdline if the filename matches a vendor
configuration file and is linked to /dev/null. The vendor configuration files are
\fB@KERNEL_DIRECTORY@/cmdline-*\fR and \fB@VENDOR_KERNEL_CONF_DIRECTORY@/cmdline.d/*.conf\fR.

The files should be in plain text format and each line will be appended directly
to the kernel commandline\&.
.RE

.PP
\fB@KERNEL_CONF_DIRECTORY@/cmdline-removal.d/*.conf\fR
.RS 4
A set of files that will be used to modify the kernel commandline by removing
string matches from the final consolidated commandline (removal happens after
the content from cmdline and cmdline.d/*.conf files are added). The matches
are made on a per line basis so multiple different removals should be placed
on their own line or file\&.
.RE

.PP
\fB@KERNEL_CONF_DIRECTORY@/update_efi_vars\fR
.RS 4
A system-wide configuration to avoid clr-boot-manager changing efi variables when
using shim-systemd backend (see flag --no-efi-update). This configuration file will
be applied every time clr-boot-manager is called - even when called by a external
tool non interactively. Possible values are: \fBno\fR, \fBfalse\fR\&.
.RE

.PP
\fB@USER_INITRD_DIRECTORY@/*\fR
.RS 4
A set of files that will be used as additional user's freestanding initrd files.
Additional initrd arguments will be added to the kernel argument list, if desired
the user may mask out system installed initrd files by creating symbolic links
within \fB@USER_INITRD_DIRECTORY@\fR pointing to \fB/dev/null\fR with same
name of system installed files.

To support early microcode updates, clr-boot-manager will identify the first file it
finds named *-ucode.cpio, and ensure that is the first initrd loaded by the boot
manager. There is currently no deterministic sorting, however, a matching file in
\fB@USER_INITRD_DIRECTORY@\fR will take precedence over the system-provided
microcode initrd in \fB@INITRD_DIRECTORY@\fR.
.RE

.SH "ENVIRONMENT"
\fI$CBM_DEBUG\fR
.RS 4
Debug level to use within \fBclr\-boot\-manager\fR. This has various levels,
1 through 6, that will affect the level of debugging information printed during
execution. The default log level is \fB4\fR, errors and above.

\fB1\fR - Set output level to debug and above.

\fB2\fR - Set output level to info and above.

\fB3\fR - Set output level to success and above.

\fB4\fR - Set output level to error and above.

\fB5\fR - Set output level to warning and above.

\fB6\fR - Set output level to fatal only.\&

.RE

.PP
.SH "COPYRIGHT"
.PP
Copyright Â© 2016-2018 Intel Corporation\&. License: Creative Commons
Attribution\-ShareAlike 3.0 Unported\s-2\u[1]\d\s+2\&.

.SH "NOTES"
.IP " 1." 4
Creative Commons Attribution\-ShareAlike 3.0 Unported
.RS 4
\%https://creativecommons.org/licenses/by-sa/3.0/
.RE
